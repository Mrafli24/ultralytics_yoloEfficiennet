# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLOv8 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolov8n.yaml' will call yolov8.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.33, 0.25, 1024] # YOLOv8n summary: 225 layers,  3157200 parameters,  3157184 gradients,   8.9 GFLOPs
  s: [0.33, 0.50, 1024] # YOLOv8s summary: 225 layers, 11166560 parameters, 11166544 gradients,  28.8 GFLOPs
  m: [0.67, 0.75, 768] # YOLOv8m summary: 295 layers, 25902640 parameters, 25902624 gradients,  79.3 GFLOPs
  l: [1.00, 1.00, 512] # YOLOv8l summary: 365 layers, 43691520 parameters, 43691504 gradients, 165.7 GFLOPs
  x: [1.00, 1.25, 512] # YOLOv8x summary: 365 layers, 68229648 parameters, 68229632 gradients, 258.5 GFLOPs

# YOLOv8.0n backbone

backbone:
  - [-1, 1, stem, [32, 'ReLU6']]  # P1
  - [-1, 1, MBConvBlock, [16, 3, 1, 1, 0]]
  - [-1, 1, MBConvBlock, [24, 3, 2, 6, 0.028, True]]  # P2
  - [-1, 1, MBConvBlock, [24, 3, 1, 6, 0.057]]
  - [-1, 1, MBConvBlock, [40, 5, 2, 6, 0.085]]  # P3
  - [-1, 1, Conv, [256, 1, 1]]  # Penyesuaian channel untuk P3
  - [-1, 1, MBConvBlock, [80, 3, 2, 6, 0.142]]  # P4
  - [-1, 1, Conv, [512, 1, 1]]  # Penyesuaian channel untuk P4
  - [-1, 1, MBConvBlock, [192, 5, 2, 6, 0.314]]  # P5
  - [-1, 1, Conv, [1024, 1, 1]]  # Penyesuaian channel untuk P5

# YOLOv8.0n head
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 6], 1, Concat, [1]] # cat backbone P4
  - [-1, 3, C2f, [512]] # 12

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 4], 1, Concat, [1]] # cat backbone P3
  - [-1, 3, C2f, [256]] # 15 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 12], 1, Concat, [1]] # cat head P4
  - [-1, 3, C2f, [512]] # 18 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 9], 1, Concat, [1]] # cat head P5
  - [-1, 3, C2f, [1024]] # 21 (P5/32-large)

  - [[15, 18, 21], 1, Detect, [nc]] # Detect(P3, P4, P5)
